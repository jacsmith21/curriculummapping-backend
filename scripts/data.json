{"CHEM1982": {"name": "CHEM1982", "title": "General Applied Chemistry", "description": "Intended primarily for non-science majors. Building on examples from environmental chemistry, polymers, fuel cells and corrosion, this course covers chemical material properties, solutions & solubility, kinetics & equilibrium, acids & bases, thermodynamics and electrochemistry. NOTE: Credit can be obtained for only one of CHEM 1012 or CHEM 1982.", "prerequisites": "70% in Grade 12 Chemistry", "corequisites": "", "recommended": ""}, "CHEM1987": {"name": "CHEM1987", "title": "General Applied Chemistry Laboratory", "description": "Intended primarily for non-science majors students. Topics include: ideal gases, heats and rates of reactions, chemical equilibria, acid-base equilibria, redox titrations, and voltaic cells.\u00a0NOTE: WHMIS certification required (see beginning of Chemistry Courses section for details). NOTE: Credit can be obtained for only one of CHEM 1017 or CHEM 1987.", "prerequisites": "70% in Grade 12 Chemistry", "corequisites": "CHEM1982", "recommended": ""}, "CS1073": {"name": "CS1073", "title": "Introduction to Computer Programming I (in Java)", "description": "Covers fundamental concepts such as decisions, loops, arrays, classes, methods and inheritance; focusing on problem analysis, algorithm design, program structure and readability. Introduction to the Java API libraries.", "prerequisites": "High School Mathematics", "corequisites": "", "recommended": ""}, "CS1083": {"name": "CS1083", "title": "Introduction to Computer Programming II (in Java)", "description": "Continues CS 1073 focusing on problem analysis, algorithm design program structure and readability. Covers recursion, sorting and searching, data abstraction, encapsulation, inheritance, polymorphism, simple data structures and files, testing and debugging.", "prerequisites": "CS1073", "corequisites": "", "recommended": ""}, "CS1303": {"name": "CS1303", "title": "Discrete Structures", "description": "Introduces topics in discrete mathematics important in computer science, including: propositional logic, predicate logic using quantifiers, direct and indirect proofs, summation and product notation, mathematical induction, elementary set theory and counting. Students are expected to write mathematical proofs throughout the course. NOTE:\u00a0Credit will not be given for both CS 1303 and MATH 2203.", "prerequisites": "High School Mathematics", "corequisites": "", "recommended": ""}, "CS2043": {"name": "CS2043", "title": "Software Engineering I", "description": "Introduction to fundamentals of the discipline of software engineering with focus on the software development life cycle. Topics include software development methodologies and processes, requirements analysis, modeling, architecture, design, implementation, testing, and maintenance. Basics of software management are also introduced.", "prerequisites": "CS1083", "corequisites": "", "recommended": ""}, "CS2263": {"name": "CS2263", "title": "Systems Software Development", "description": "This course examines program development and supporting tools, using the C language. Topics include: organization of programs into procedural components, multi-file program organization, inter-file type checking, and development, maintenance and performance techniques. Software tools for program development such as compilation/linking, building, debugging, version control, profiling and tracing are included.", "prerequisites": "CS1083", "corequisites": "", "recommended": ""}, "CS2333": {"name": "CS2333", "title": "Computability and Formal Languages", "description": "This course introduces students to some of the fundamental ideas in theoretical computer science: functions and relations, formal languages, finite automata, regular languages, context-free grammars, context-free languages, push-down automata, pumping lemmas, Turing machines, the Church-Turing thesis, recursive and recursively enumerable languages, the Chomsky hierarchy, the halting problem and other unsolvable decision problems, problem reducibility, and fundamental computational complexity classes.", "prerequisites": "CS1073 and CS1303 and 30 ch", "corequisites": "", "recommended": ""}, "CS2383": {"name": "CS2383", "title": "Data Structures and Algorithms", "description": "Presents formal specifications of abstract data types and their data structure representations, operations, and algorithms. Includes priority queues, dictionaries, graphs, heaps, hash tables, binary search trees, balanced trees,and graph adjacency representations. Covers sorting, searching, dynamic storage handling, and fundamental graph algorithms. Asymptotic analysis of time and space complexity are taught and used throughout the course. Students are expected to implement a variety of data structures and graph algorithms.", "prerequisites": "CS1083 and CS1303", "corequisites": "", "recommended": ""}, "CS2613": {"name": "CS2613", "title": "Programming Languages Laboratory", "description": "Introduces several programming languages in a hands-on-setting, with a view to preparing students for advanced courses and/or workplace projects. Students will carry out supervised laboratory exercises and independent work designed to improve programming skills, boost confidence and competence in acquiring new languages, and help choose implementation languages for future projects. Currently the course covers Python, JavaScript, Octave/Matlab, and Racket.", "prerequisites": "CS1083", "corequisites": "", "recommended": ""}, "CS3383": {"name": "CS3383", "title": "Algorithm Design and Analysis", "description": "This course examines the characteristics of algorithms that lead to efficient computer solutions for discrete problems. A variety of different algorithm classes and design techniques, including divide and conquer, greedy, dynamic programming, and backtracking, are introduced and compared. Design and analysis of randomized algorithms is introduced, along with strategies for dealing with computationally hard problems. Normally, one or more models of parallel algorithms will be discussed.", "prerequisites": "CS2333 and (STAT2593 or STAT3083)", "corequisites": "", "recommended": ""}, "STAT2593": {"name": "STAT2593", "title": "Probability and Statistics for Engineers", "description": "Probability spaces: combinatorial probability; conditional probability and independence. Random variables: discrete distributions; continuous distributions; expectation, variance, and covariance; linear combinations. Statistics: descriptive and graphical statistics; sampling distributions. Inference: point estimation; confidence intervals; hypothesis tests; paired data designs; two sample inference.", "prerequisites": "MATH1013", "corequisites": "", "recommended": ""}, "MATH1013": {"name": "MATH1013", "title": "Introduction to Calculus II", "description": "Definition of the integral, fundamental theorem of Calculus, Techniques of integration, improper integrals. Ordinary differential equations. Taylor polynomials and series. NOTE: Credit may be obtained for only one of MATH 1013 or MATH 1063.", "prerequisites": "MATH1003 or MATH1053", "corequisites": "", "recommended": ""}, "MATH1003": {"name": "MATH1003", "title": "Introduction to Calculus I", "description": "Functions and graphs, limits, derivatives of polynomial, log, exponential and trigonometric functions. Curve sketching and extrema of functions.\u00a0NOTE: Credit may be obtained for only one of MATH 1003, MATH 1053 or MATH 1823.\u00a0NOTE: Part-time students will be charged a course fee for the MATH 1003 credit.", "prerequisites": "A minimum grade of 60% in New Brunswick high school", "corequisites": "", "recommended": ""}, "MATH1053": {"name": "MATH1053", "title": "Enriched Introduction to Calculus", "description": "The syllabus is similar to that for MATH 1003, with more emphasis placed both on the theory of calculus and interesting applications. The course will be of special interest to students with strong mathematical backgrounds. Any interested student (with or without high school calculus) is encouraged to consult with the Mathematics Department. NOTE: Credit may be obtained for only one of MATH 1003, MATH 1053 or MATH 1823.", "prerequisites": "((at least 95% recommended) and in each of Pre-Calculus A 120 and Pre-Calculus B 120) and (or a grade of 85% or higher in a Grade 12 Math course that contains some Calculus) and (or consent of the Department of Mathematics and Statistics)", "corequisites": "", "recommended": ""}, "STAT3083": {"name": "STAT3083", "title": "Probability and Mathematical Statistics I", "description": "The first half of a two-part sequence covering various topics in probability and statistics. This course provides an introduction to probability theory and the theory of random variables and their distributions. Probability laws. Discrete and continuous random variables. Means, variances, and moment generating functions. Sums of random variables. Joint discrete distributions. Central Limit Theorem. Examples drawn from engineering, science, computing science and business.", "prerequisites": "MATH1013", "corequisites": "", "recommended": ""}, "CS3413": {"name": "CS3413", "title": "Operating Systems I", "description": "This course examines the fundamental role of an operating system in relation to the operation of applications. Essential theory of operating systems is covered, including processes, process synchronization, interprocess communications, process scheduling, storage (primary and secondary) management, resource sharing, security, I/O, and user interfaces. At least one of the major Unix shell languages will be covered.", "prerequisites": "CS2253 or CS2263", "corequisites": "", "recommended": ""}, "CS2253": {"name": "CS2253", "title": "Machine Level Programming", "description": "Introduces students to lower-level computer operations and the association with higher-level procedural programming constructs. Topics include binary representation of data, instruction formats and execution, assembler programming, scope, functions, user-defined data types using both low- and high-level programming languages.", "prerequisites": "", "corequisites": "CS2263", "recommended": ""}, "CS3503": {"name": "CS3503", "title": "Systems Analysis, Design and Project Management", "description": "Introduces students to the life cycle of information systems. Covers techniques and tools used in systems analysis and project management. Emphasizes communication skills, both written and oral, as well as team skills.", "prerequisites": "INFO1103 and 60 ch", "corequisites": "", "recommended": ""}, "INFO1103": {"name": "INFO1103", "title": "Data and Information Management", "description": "Topics include: History and motivation of information systems; database system components; relational data model; relational algebra; SQL language; data integrity, security and privacy; data modeling and logical database design; indexing and physical database design; rapid application development; user interface design; data validation and exception handling; accessing a database using an API (such as ADO.NET and JDBC); stored procedures and triggers; introduction to web development, three layered architecture, and XML. NOTE: Credit is only given for one of CS 2513, CS 2533, INFO 1103 and INFO 2103.", "prerequisites": "CS1073", "corequisites": "", "recommended": ""}, "ECE1813": {"name": "ECE1813", "title": "Electricity and Magnetism", "description": "An introduction to the fundamentals of electricity and magnetism and applications. Covers concepts of charge, electric fields, voltage, current, power, energy, magnetic fields and the link between electricity and magnetism for the creation of machines. Includes resistors, resistance, Ohm's law, Kirchoff's voltage and current laws, some electrical properties of materials. Electric sources, simple series, parallel, and series-parallel DC circuits and mesh analysis are examined. Energy conversion and simple electric machines are examined. The behaviour and use of common sensors and transducers are discussed.", "prerequisites": "Two years of high school physics", "corequisites": "MATH1003", "recommended": ""}, "ECE2214": {"name": "ECE2214", "title": "Digital Logic Design", "description": "An introductory course to practical aspects of digital system design. The course covers digital logic design, including basic design concepts and implementation technology, number representation, synthesis of combinational and sequential logic, and the use of HDL and computer-based tools.", "prerequisites": "CS1003 or CS1073 or equivalent", "corequisites": "ECE2215", "recommended": "ECE1813"}, "CS1003": {"name": "CS1003", "title": "Programming and Problem Solving for Engineers", "description": "Introduction to the use of digital computers for problem solving and communicating solutions. Covers use of procedures, decisions, loops and arrays focusing on scientific and engineering problem analysis, algorithm design, and program structure. Also includes organizing, tabulating, and graphing program output with different software tools to communicate results. This course is currently taught primarily in Matlab.", "prerequisites": "High School Mathematics", "corequisites": "PHYS1081 or equivalent or permission from instructor", "recommended": ""}, "PHYS1081": {"name": "PHYS1081", "title": "Foundations of Physics for Engineers", "description": "An introduction to the fundamentals of mechanics. Vector analysis and its application to the analysis of the motion of particles and rigid bodies. Newton's three laws of motion. The kinematics and dynamics of particle motion along straight and curved paths. Work, energy, impulse and momentum of particles and rigid bodies. An introduction to the rotation of a rigid body about a fixed axis, moments of inertia, angular momentum. Simple Harmonic Motion.", "prerequisites": "", "corequisites": "(MATH1003 or MATH1053) and (MATH1503 or MATH2213 or equivalent)", "recommended": ""}, "MATH1503": {"name": "MATH1503", "title": "Introduction to Linear Algebra", "description": "Lines and planes, the geometry and algebra of vectors, systems of linear equations, matrix algebra, linear independence, linear transformations, determinants, complex numbers, eigenvectors, diagonalization, rotation matrices, quadratic forms, least squares.", "prerequisites": "A minimum grade of 60% in New Brunswick high school", "corequisites": "", "recommended": ""}, "MATH2213": {"name": "MATH2213", "title": "Linear Algebra I", "description": "This course introduces the basic concepts of linear algebra, mainly in finite dimensional real vector spaces. \u00a0Systems of linear equations, vector and matrix algebra, bases and dimension of subspaces, row and column spaces, linear transformations and matrix representations, inner products, determinants, eigenvectors and diagonalization. \u00a0Applications as time permits.", "prerequisites": "MATH1013 or MATH1053 or both MATH1823 and MATH1833", "corequisites": "", "recommended": ""}, "MATH1823": {"name": "MATH1823", "title": "Calculus for Management Science", "description": "Polynomial, logarithmic and exponential functions. Limits and derivatives. Extreme values and related rates. Simple integration and differential equations, with stress on applications to business and economics. NOTE: Credit may be obtained for only one of MATH 1003 , MATH 1053 or MATH 1823.", "prerequisites": "A minimum grade of 60% in New Brunswick high school", "corequisites": "", "recommended": ""}, "MATH1833": {"name": "MATH1833", "title": "Finite Mathematics for Management Science", "description": "Matrices and systems of linear equations. Linear programming concepts; graphical solution of two variable problems. Permutations and combinations. Elementary probability. Mathematics of finance. NOTE: Credit for MATH 1833 will not be given if the student has previously taken either MATH 1503 or MATH 2213.", "prerequisites": "A minimum grade of 60% in New Brunswick high school", "corequisites": "", "recommended": ""}, "ECE2215": {"name": "ECE2215", "title": "Digital Logic Design Laboratory", "description": "This is an introductory course to practical aspects of digital system design. Course includes the design of digital circuits with CAD tools and VHDL hardware description language.", "prerequisites": "CS1003 or CS1073 or equivalent", "corequisites": "ECE2214", "recommended": "ECE1813"}, "ECE2412": {"name": "ECE2412", "title": "Simulation and Engineering Analysis", "description": "An introduction to modeling and numerical methods as applied in the solution of engineering problems. The solution of nonlinear equations, polynomials, curve fitting, numerical integration and difference equations. Simulation tools such as MATLAB will be used.", "prerequisites": "(CS1003 or CS1073 or equivalent) and (ECE1813 or equivalent) and (MATH1013) and (MATH1503 or equivalent)", "corequisites": "", "recommended": ""}, "CS3113": {"name": "CS3113", "title": "Introduction to Numerical Methods", "description": "Intended for Computer Science and Engineering students. Error analysis, convergence and stability. Approximation of functions by polynomials. Numerical quadrature and differentiation. The solution of linear and non-linear equations and the solution of ordinary differential equations. This course will emphasize the understanding of numerical algorithms and stress applications in the applied sciences, as well as the influence of finite precision and arithmetic on computational results.\u00a0Credit will be given for only one of CS 3113 or\u00a0MATH 3413\u00a0or ECE 2412.", "prerequisites": "(CS1003 or CS1073) and (MATH2213 or MATH1503)", "corequisites": "", "recommended": ""}, "ECE2701": {"name": "ECE2701", "title": "Electric Circuits and Electronics (for non-electricals)", "description": "Network analysis including AC. Introduction to electronic devices, circuits, and motors. Cannot be used for credit by students in the Electrical Engineering and Computer Engineering programs.", "prerequisites": "ECE1813 or equivalent and MATH1013 and MATH1503", "corequisites": "", "recommended": ""}, "ECE3221": {"name": "ECE3221", "title": "Computer Organization", "description": "Register transfer systems and datapaths, microprocessors, microprocessor architecture and operation, instruction formats, assembly language programming, procedures and parameter passing, system bus timing, interfacing memory IO ports, serial and parallel data transfer, interrupts.", "prerequisites": "ECE2213 or ECE2214", "corequisites": "ECE2215 or CS1023 or CS1083", "recommended": ""}, "CS1023": {"name": "CS1023", "title": "Data Structures and Algorithms for Engineers", "description": "Introduction to the ideas of abstraction of procedures and data. Implementation and handling of the fundamental data types: lists, stacks, queues, and graphs. Basic concepts of discrete mathematics, elements of combinatorics, aspects of complexity and recursion and algorithm development, including estimation of program resource utilization. This course is currently taught in C. NOTE: This course may not be taken for credit by BCS, BISys, or BScSwE students.", "prerequisites": "CS1003", "corequisites": "", "recommended": ""}, "ECE3232": {"name": "ECE3232", "title": "Embedded Systems Design", "description": "A hardware oriented course with emphasis on the components and techniques used in the design of embedded systems. Topics include system design and methodologies and techniques, microcontroller hardware design, software design using C, testing and implementation. A team project will be used to provide the opportunity to apply the content of this course to the development of an embedded application. Most lecture material will be delivered in the context of this project.", "prerequisites": "(CS1023 or CS1083) and (ECE3221)", "corequisites": "", "recommended": ""}, "ECE3242": {"name": "ECE3242", "title": "Computer Architecture", "description": "Important aspects of computer architecture will be covered with a unifying theme of computer system performance. Topics include computer evolution, system busses, main memory, cache memory, memory management, CPU structure, CPU pipelining, superscalar processors, reduced instruction set computers, 64-bit processors, and parallel processing architectures.", "prerequisites": "ECE2215 and ECE3221", "corequisites": "", "recommended": ""}, "ECE3812": {"name": "ECE3812", "title": "Data Communications and Networking", "description": "Data transmission fundamentals including signal encoding, error control, flow controls, multiplexing, switching. Protocol architectures (OS, TCP/IP). Network protocols peer to peer, medium access control, routing. Local area networks: Ethernet, wireless.", "prerequisites": "ECE3221", "corequisites": "", "recommended": ""}, "CS3873": {"name": "CS3873", "title": "Net-centric Computing", "description": "Introduction to fundamentals of data communication and application programming in a networked environment. Topics include data transmission, data link concepts, networking concepts, network security, application protocols, net-centric computing and web programming.", "prerequisites": "CS2253 or CS2263", "corequisites": "", "recommended": ""}, "ENGG1001": {"name": "ENGG1001", "title": "Engineering Practice Lecture Series", "description": "A guest lecture series intended to introduce students to the engineering profession. Speakers from various engineering disciplines and job functions share their career experiences and discuss exciting engineering projects underway in the region.", "prerequisites": "", "corequisites": "", "recommended": ""}, "ENGG1003": {"name": "ENGG1003", "title": "Engineering Technical Communications", "description": "Oral, written and visual communication skills are developed as important tools used by engineers. Technical writing style is taught through the preparation of reports and summaries, and oral communication skills are improved through public speaking and the preparation of formal presentations. Computer-aided design is introduced and used to enhance visualization skills. The importance of information literacy is stressed. Various types of engineering drawings are presented and engineering unit conversions are practiced.", "prerequisites": "", "corequisites": "", "recommended": ""}, "ENGG1015": {"name": "ENGG1015", "title": "Introduction to Engineering Design and Problem Solving", "description": "This course introduces engineering design methodology and develops basic problem solving techniques. Under the supervision of senior students and with the guidance of industry engineers, students work both individually and in teams on real engineering design projects for the local community in a simulated engineering consulting environment. Project planning, team- building, leadership and responsible care are discussed. Laboratories are used to demonstrate problem solving techniques for analytical and open-ended problems, and life-long learning is emphasized by having students integrate co-requisite and researched material into a structured design process. Restricted to students with fewer than 60 ch of program credit upon first admission to the Faculty of Engineering or with permission of the instructor.", "prerequisites": "", "corequisites": "ENGG1003 and PHYS1081 and MATH1003 and MATH1503", "recommended": ""}, "ENGG4013": {"name": "ENGG4013", "title": "Law and Ethics for Engineers", "description": "General introduction to the legal and ethical aspects of engineering practice. Social responsibilities of engineers, the engineering act and code of ethics, occupational health and safety, sustainable development, environmental stewardship, employment equity, legal duties and liabilities of the professional engineer, contracts, the tort of negligence, labour law, intellectual and industrial property, conflict resolution. Restricted to students with at least 100 ch in the engineering program. Limited enrolment; priority given to students in their final year of engineering.", "prerequisites": "", "corequisites": "", "recommended": ""}, "ME3232": {"name": "ME3232", "title": "Engineering Economics", "description": "Application of engineering economic analysis to mechanical and industrial engineering systems. Major emphasis will be given to decision-making based on the comparison of worth of alternative courses of action with respect to their costs. Topics include: discounted cash flow mechanics, economic analyses, management of money, economic decisions. Restricted to students with at least 60 ch.", "prerequisites": "", "corequisites": "", "recommended": ""}, "SWE4040": {"name": "SWE4040", "title": "Software Engineering Design Project", "description": "A software design and implementation experience involving a medium to large group. Students prepare requirements, specification, analysis and design documents as a team toward development of a useful software product and use the documentation to implement and test the product. The development process should consider a broad range of constraints including non-functional requirements to the software product, health and safety, sustainable development and environmental stewardship. Students manage their projects professionally, present their design work orally, and demonstrate formally that the product meets its requirements.", "prerequisites": "CS3503 or at least 2 terms of co-op and 100 ch in the software engineering program or permission from the instructor", "corequisites": "", "recommended": ""}, "ENGG4025": {"name": "ENGG4025", "title": "Multidisciplinary Design Project", "description": "Full-year design course (fall and winter of same academic year) which may be taken in place of the final year design course in any engineering program. Working in multidisciplinary teams of 4 or 5 students, students will work on a design project sponsored by an outside client. The proposed solution should meet a broad range of constraints including health and safety, sustainable development and environmental stewardship. Deliverables include progress reports and presentations, a final report including engineering drawings, and if applicable, a prototype. Weekly lectures will cover topics relevant to the design projects and will include presentations by guest speakers. The weekly tutorial hours are designated for scheduled meetings with project co-mentors .", "prerequisites": "Restricted to students who have met the requirements of the capstone design course in their program and have received approval from their degree program coordinator", "corequisites": "", "recommended": ""}, "TME4025": {"name": "TME4025", "title": "Product Design and Development", "description": "Full-year Product Design and Development course (fall and winter of same academic year) which may be taken in place of the final-year design course in most engineering program. The cornerstone is a project in which teams of 4 or 5 students conceive, design and prototype a product. The proposed solution would use modern tools and methods for product design and development, and should meet a broad range of constraints including health and safety, sustainable development and environmental stewardship. Weekly class sessions are conducted in lecture or workshop mode and employ cases and hands-on exercises to reinforce the key ideas. Topics include identifying customer needs, concept generation, product architecture, industrial design, and design-for-manufacturing.", "prerequisites": "Restricted to students who have met the requirements of the capstone design course in their engineering program and have received approval from both their degree program coordinator and the TME program Chair", "corequisites": "", "recommended": ""}, "SWE4103": {"name": "SWE4103", "title": "Software Quality and Project Management [A]", "description": "Software Quality: Emphasizes testing, verification and validation, techniques. Introduces formal specification languages, statistical software reliability engineering, software development process monitoring and maturity models, and process and product metrics. Software Project Management: Emphasizes software project tracking, planning and scheduling, organizing and managing software development teams, introduces factors influencing productivity and success, risk analysis and planning for change.", "prerequisites": "CS2033 or CS2043 or permission from the instructor", "corequisites": "", "recommended": ""}, "CS2033": {"name": "CS2033", "title": "Software Design for Engineers", "description": "An introduction to software design and implementation in the context of a team project emphasizing object-oriented programming and modularization for building reliable and reusable system components.", "prerequisites": "CS1023 or ECE2412 or equivalent", "corequisites": "", "recommended": ""}, "SWE4203": {"name": "SWE4203", "title": "Software Evolution and Maintenance [A]", "description": "Maintainability and reusability analysis. Approaches to maintenance and long-term software development. Change management and impact analysis. Release and configuration management. Reengineering and reverse engineering. Regression testing.", "prerequisites": "CS2033 or CS2043 or permission from the instructor", "corequisites": "", "recommended": ""}, "SWE4403": {"name": "SWE4403", "title": "Software Architecture and Design Patterns (Cross Listed: CS 4015)", "description": "This course introduces concepts of software design patterns and architecture. The course covers principles of reuseable object-oriented programming, as well as creational, structural, and behavioural patterns. The course also covers software quality attributes, architectural tactics and patterns, designing and documenting software architecture, architecture reconstruction, architecture evaluation, and software product lines. Students will practice applying and implementing design patterns and software architecture design and evaluation in course work by developing various software systems.", "prerequisites": "CS2043 or permission from the instructor", "corequisites": "", "recommended": ""}}